options:
  logging: CLOUD_LOGGING_ONLY
timeout: "1200s"

# Only substitutions that this file really uses
substitutions:
  _REGION: europe-west2
  _AR_REPO: innerpeace            # Artifact Registry repo name (exists in europe-west2)
  _SERVICE: meeting-broker        # Cloud Run service name
  _RUNTIME_SA: bookings-bot@level-array-470911-t3.iam.gserviceaccount.com

  # App runtime env (weâ€™ll pass these to Cloud Run)
  _CALENDAR_ID: thomaspal@innerpeace-developer.co.uk
  _IMPERSONATE_USER: thomaspal@innerpeace-developer.co.uk
  _SERVICE_ACCOUNT_EMAIL: bookings-bot@level-array-470911-t3.iam.gserviceaccount.com
  _USE_DWD: "true"
  _USE_MEET: "auto"

steps:
  # Build the Docker image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA
      - -f
      - Dockerfile
      - .

  # Push to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA

  # Deploy to Cloud Run (pass runtime envs here)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail

        gcloud run deploy "${_SERVICE}" \
          --image="${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA"\
          --region="${_REGION}" \
          --platform=managed \
          --allow-unauthenticated \
          --service-account="${_RUNTIME_SA}" \
          --max-instances=5 \
          --cpu=1 --memory=512Mi \
          --set-env-vars=NODE_ENV=production \
          --set-env-vars=CALENDAR_ID=${_CALENDAR_ID} \
          --set-env-vars=IMPERSONATE_USER=${_IMPERSONATE_USER} \
          --set-env-vars=SERVICE_ACCOUNT_EMAIL=${_SERVICE_ACCOUNT_EMAIL} \
          --set-env-vars=USE_DWD=${_USE_DWD} \
          --set-env-vars=USE_MEET=${_USE_MEET} \
          --quiet

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$COMMIT_SHA
